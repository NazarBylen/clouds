name: Build and Deploy (Docker Container [NodeJS project + PM2])

on:
  push:
    branches:
      - lab2
    workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      DATABASE_HOST: ${{ secrets.DATABASE_HOST }}
      DATABASE_PORT: ${{ secrets.DATABASE_PORT }}
      DATABASE_USERNAME: ${{ secrets.DATABASE_USERNAME }}
      DATABASE_PASSWORD: ${{ secrets.DATABASE_PASSWORD }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Set Package Version
        id: set-version
        run: echo "PACKAGE_VERSION=$(jq -r .version package.json)" >> $GITHUB_ENV

      - name: Show Package Version
        run: |
          echo "Package Version: ${{ env.PACKAGE_VERSION }}"

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3
        with:
          docker-version: '24.0.6'

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker Image
        id: build-docker-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: clouds-nodejs-app
          IMAGE_TAG: ${{ env.PACKAGE_VERSION }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG \
            --build-arg DATABASE_HOST_ARG=$DATABASE_HOST \
            --build-arg DATABASE_PORT_ARG=$DATABASE_PORT \
            --build-arg DATABASE_USERNAME_ARG=$DATABASE_USERNAME \
            --build-arg DATABASE_PASSWORD_ARG=$DATABASE_PASSWORD \
            --build-arg DATABASE_NAME_ARG=$DATABASE_NAME \
            .
          echo "docker-image=$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      - name: Push docker image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: clouds-nodejs-app
          IMAGE_TAG: ${{ env.PACKAGE_VERSION }}
        run: |
          docker push steps.build-docker-image.outputs.docker-image
